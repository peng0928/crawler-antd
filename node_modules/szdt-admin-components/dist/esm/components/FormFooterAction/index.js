import "antd/es/space/style";
import _Space from "antd/es/space";
import "antd/es/button/style";
import _Button from "antd/es/button";
import "antd/es/form/style";
import _Form from "antd/es/form";
var _excluded = ["disabled", "onCancelText", "onOkText", "onCancel", "onOk", "loading", "extraBtn"];
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import React, { useCallback } from 'react';
import "./index.less";
var Item = _Form.Item;
function FormFooterAction(_ref) {
  var _ref$disabled = _ref.disabled,
    disabled = _ref$disabled === void 0 ? false : _ref$disabled,
    _ref$onCancelText = _ref.onCancelText,
    onCancelText = _ref$onCancelText === void 0 ? '取消' : _ref$onCancelText,
    _ref$onOkText = _ref.onOkText,
    onOkText = _ref$onOkText === void 0 ? '确认' : _ref$onOkText,
    onCancel = _ref.onCancel,
    onOk = _ref.onOk,
    loading = _ref.loading,
    extraBtn = _ref.extraBtn,
    rest = _objectWithoutProperties(_ref, _excluded);
  var onHandleCancel = useCallback(function () {
    if (onCancel) {
      onCancel();
      return;
    }
    window.history.back();
  }, [onCancel]);
  var onHandleOk = useCallback(function (e) {
    e.preventDefault();
    if (onOk) {
      onOk();
    }
  }, [onOk]);
  return /*#__PURE__*/React.createElement("div", _extends({}, rest, {
    className: "form-footer"
  }), /*#__PURE__*/React.createElement(_Space, {
    style: {
      width: '100%',
      justifyContent: 'space-between'
    }
  }, /*#__PURE__*/React.createElement(Item, null, extraBtn), /*#__PURE__*/React.createElement(Item, null, /*#__PURE__*/React.createElement(_Space, null, /*#__PURE__*/React.createElement(_Button, {
    onClick: onHandleCancel
  }, onCancelText), /*#__PURE__*/React.createElement(_Button, {
    type: "primary",
    htmlType: "submit",
    loading: loading,
    onClick: onHandleOk,
    disabled: disabled
  }, onOkText)))));
}
export default FormFooterAction;